{"ast":null,"code":"const initialState = {\n  tasks: []\n};\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      const newTask = {\n        id: Date.now(),\n        text: action.payload.text,\n        category: action.payload.category,\n        dueDate: action.payload.dueDate,\n        completed: false\n      };\n      return {\n        ...state,\n        tasks: [...state.tasks, newTask]\n      };\n    case 'REMOVE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n    case 'UPDATE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.id ? {\n          ...task,\n          text: action.payload.newText,\n          category: action.payload.newCategory,\n          dueDate: action.payload.newDueDate\n        } : task)\n      };\n    case 'TOGGLE_COMPLETE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload ? {\n          ...task,\n          completed: !task.completed\n        } : task)\n      };\n    default:\n      return state;\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["initialState","tasks","taskReducer","state","action","type","newTask","id","Date","now","text","payload","category","dueDate","completed","filter","task","map","newText","newCategory","newDueDate"],"sources":["C:/Users/asus/OneDrive/Escritorio/luana/TaskFlow/client/src/redux/taskReducer.js"],"sourcesContent":["const initialState = {\r\n  tasks: [],\r\n};\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TASK':\r\n      const newTask = {\r\n        id: Date.now(),\r\n        text: action.payload.text,\r\n        category: action.payload.category,\r\n        dueDate: action.payload.dueDate,\r\n        completed: false,\r\n      };\r\n      return { ...state, tasks: [...state.tasks, newTask] };\r\n    case 'REMOVE_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((task) => task.id !== action.payload),\r\n      };\r\n    case 'UPDATE_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((task) =>\r\n          task.id === action.payload.id\r\n            ? { ...task, text: action.payload.newText, category: action.payload.newCategory, dueDate: action.payload.newDueDate }\r\n            : task\r\n        ),\r\n      };\r\n    case 'TOGGLE_COMPLETE_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((task) =>\r\n          task.id === action.payload ? { ...task, completed: !task.completed } : task\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,MAAMC,OAAO,GAAG;QACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAEN,MAAM,CAACO,OAAO,CAACD,IAAI;QACzBE,QAAQ,EAAER,MAAM,CAACO,OAAO,CAACC,QAAQ;QACjCC,OAAO,EAAET,MAAM,CAACO,OAAO,CAACE,OAAO;QAC/BC,SAAS,EAAE;MACb,CAAC;MACD,OAAO;QAAE,GAAGX,KAAK;QAAEF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAEK,OAAO;MAAE,CAAC;IACvD,KAAK,aAAa;MAChB,OAAO;QACL,GAAGH,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACc,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKH,MAAM,CAACO,OAAO;MAChE,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGR,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACgB,GAAG,CAAED,IAAI,IAC1BA,IAAI,CAACT,EAAE,KAAKH,MAAM,CAACO,OAAO,CAACJ,EAAE,GACzB;UAAE,GAAGS,IAAI;UAAEN,IAAI,EAAEN,MAAM,CAACO,OAAO,CAACO,OAAO;UAAEN,QAAQ,EAAER,MAAM,CAACO,OAAO,CAACQ,WAAW;UAAEN,OAAO,EAAET,MAAM,CAACO,OAAO,CAACS;QAAW,CAAC,GACnHJ,IACN;MACF,CAAC;IACH,KAAK,sBAAsB;MACzB,OAAO;QACL,GAAGb,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACgB,GAAG,CAAED,IAAI,IAC1BA,IAAI,CAACT,EAAE,KAAKH,MAAM,CAACO,OAAO,GAAG;UAAE,GAAGK,IAAI;UAAEF,SAAS,EAAE,CAACE,IAAI,CAACF;QAAU,CAAC,GAAGE,IACzE;MACF,CAAC;IACH;MACE,OAAOb,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}